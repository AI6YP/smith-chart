'use strict';

const data = `0.70699	-66.4365	291.285280365858
0.7038	-68.4453	287.609723160027
0.69284	-70.7986	275.563224378174
0.67717	-73.7038	259.760555090915
0.67107	-75.8206	254.016052047548
0.66556	-77.6851	249.007295778017
0.6564	-80.3101	241.036088474971
0.6333	-82.5082	222.702481592582
0.61406	-85.5623	209.107633310877
0.5977	-87.3513	198.570718369376
0.5655	-89.7605	180.149597238205
0.5428	-93.0239	168.722659667542
0.51733	-95.9754	157.18088963474
0.49909	-99.1291	149.636661276477
0.47309	-102.208	139.785731908675
0.45694	-106.794	134.141715464221
0.44698	-111.659	130.825286608079
0.43589	-117.986	127.27039052667
0.42472	-125.62	123.82839660687
0.41175	-133.291	119.995750106247
0.41055	-140.585	119.649673424379
0.40983	-147.97	119.442702949997
0.40182	-155.978	117.173760406567
0.41036	-162.939	119.59500712299
0.41731	-168.232	121.617841390791
0.43126	-174.663	125.827267292612
0.42959	-179.797	125.312494521485
0.42687	174.379	124.480484357825
0.4345	171.537	126.83465959328
0.42275	167.201	123.235166738848
0.40662	163.534	118.526070983181
0.39103	159.829	114.211701725865
0.37761	157.633	110.670961937049
0.34263	152.815	102.121331974383
0.30124	147.632	93.110653157021
0.27073	144.304	87.1234247946577
0.2359	138.324	80.872922392357
0.1755	131.087	71.2856276531231
0.12739	124.568	64.5987325380181
0.09058	119.823	59.9601944096237
0.06824	114.96	57.3237743624968
0.04465	84.4391	54.6736798032135
0.04376	34.221	54.5762570066092
0.06621	4.70571	57.09045931098
0.08498	-12.6228	59.2872286944548
0.10862	-26.6069	62.1855998564024
0.12161	-38.586	63.8446475938934
0.12917	-47.199	64.8329754372266
0.12716	-55.8515	64.5685348975757
0.11678	-63.0234	63.2220737755033
0.10533	-66.9967	61.7730559871237
0.09643	-75.4961	60.672111734564
0.08919	-89.2055	59.7923826044949
0.08774	-103.786	59.6178720978668
0.09289	-127.153	60.2402134250532
0.10803	-150.582	62.1113938809601
0.13956	-170.971	66.2196085723583`;

module.exports = data
  .split('\n')
  .map(e => e
    .split('\t')
    .map(n => Number(n))
  )
  .map(e => [
    e[0] * Math.acos(e[1] / 180),
    e[0] * Math.asin(e[1] / 180)
  ]);
